type Query {
    #Ping
    ping: String

    #AttendanceType
    listAllAttendanceTypes: [AttendanceType]

    #DailyAttendance
    dailyAttendanceFindByStudentId(studentId: ID!): [DailyAttendance]
    dailyAttendanceFindByDate(date: String!): [DailyAttendance]
    dailyAttendanceFindByStudentIdAndDate(studentId: ID!, date: String!): [DailyAttendance]
    dailyAttendanceFindByStudentIdAndAttendanceTypeName(studentId: ID!, attendanceTypeName: String!): [DailyAttendance]
    dailyAttendanceFindByStudentIdWhereNotFullAttendance(studentId: ID!): [DailyAttendance]
    dailyAttendanceFindByAttendanceTypeNameAndDate(attendanceTypeName: String!, date:String!):[DailyAttendance]

    #AttendanceSummary
    summarizeStudentAttendance(studentId: ID!): AttendanceSummary
    summarizeSchoolAttendance: AttendanceSummary
    summarizeStudentAttendanceBetweenDates(studentId: ID!, startDate: String!, endDate: String!): AttendanceSummary
    summarizeSchoolAttendanceBetweenDates(startDate: String!, endDate: String!): AttendanceSummary

    #Student
    studentsListAll: [Student]
    studentsFindById(id: ID!): Student
    studentsFindByOhioSsid(ohioSsid: String!): Student
    studentsFindByFirstNameIgnoreCase(firstName: String!): [Student]
    studentsFindByLastNameIgnoreCase(lastName: String!): [Student]
    studentsFindByLastNameStartingWith(firstLetter: String!): [Student]
    studentsFindByFirstNameStartingWith(firstLetter: String!): [Student]
    studentsFindByMiddleNameIgnoreCase(middleName: String!): [Student]
    studentsFindByFirstNameIgnoreCaseAndLastNameIgnoreCase(firstName: String!, lastName: String!): [Student]
    studentsFindByFirstNameIgnoreCaseOrMiddleNameIgnoreCaseOrLastNameIgnoreCase(firstName: String!, middleName: String!, lastName: String!): [Student]
    studentsSearchByKeyword(keyword: String!): [Student]
    studentsFindByEmail(email: String!): Student
    studentsFindByBirthMonth(month: Int!): [Student]
    studentsFindByDob(dob: String!): [Student]
    studentsFindByDobBefore(date: String!): [Student]
    studentsFindByDobAfter(date: String!): [Student]
    studentsFindBySex(sex: String!): [Student]
    studentsFindByDobBetween(startDate: String!, endDate: String!): [Student]
    studentsFindByLastNameOrderByFirstNameAsc(lastName: String!): [Student]
    studentsCountBySex(sex: String!): Int
    studentsFindBySexOrderByLastNameAsc(sex: String!): [Student]
    studentsFindByEmailContainingIgnoreCase(emailFragment: String!): [Student]
    studentsFindByGradeLevel(gradeLevel: String!):[Student]

    #FamilyGroup
    familyGroupListAllFamilyMembersByStudentId(studentId: ID!): [FamilyGroup]
    familyGroupFindByStudentIdAndParentGuardianTrue(studentId: ID!): [FamilyGroup]
    familyGroupFindByStudentIdAndEmergencyPickupTrue(studentId: ID!): [FamilyGroup]
    familyGroupFindByFamilyMemberId(familyMemberId: ID!): [FamilyGroup]

    #FamilyMember
    familyMemberListAll: [FamilyMember]
    familyMemberSearchByKeyword(keyword: String!): [FamilyMember]
    familyMemberFindByLastName(lastName: String!): [FamilyMember]
    familyMemberFindByFirstName(firstName: String!): [FamilyMember]
    familyMemberFindByMiddleName(middleName: String!): [FamilyMember]
    familyMemberFindByPhoneNumber(phoneNumber: String!): [FamilyMember]

    #GradeLevel
    gradeLevelListAll: [GradeLevel]

    #Staff
    staffFindById(id: ID!): Staff
    staffListAllStaff: [Staff]
    staffSearchByKeyword(keyword: String!): [Staff]
    staffFindByLastName(lastName: String!): [Staff]
    staffFindByFirstName(firstName: String!): [Staff]
    staffFindByMiddleName(middleName: String!): [Staff]
    staffFindByEmail(email: String!): [Staff]
    staffFindByPositionContains(position: String!): [Staff]
    staffFindByGradeLevelName(name: String!): [Staff]

    #Course
    courseFindAll: [Course]
    courseFindByCourseNameContains(courseName: String!): [Course]
    courseFindByTeacherLastName(lastName: String!):[Course]
    courseFindByGradeLevelName(gradeLevelName: String!): [Course]
    courseFindByStudentId(studentId: String!): [Course]

    #Assignment
    assignmentsFindByCourseId(courseId: ID!): [Assignment]
    assignmentsFindByStudentIdAndDateRange(studentId: ID!, startDate: String!, endDate: String!): [Assignment]
    assignmentsFindByTeacherIdAndDateRange(staffId: ID!, startDate: String!, endDate: String!): [Assignment]
    assignmentsFindByCourseIdAndAssignmentType(courseId: ID!, assignmentType: String!): [Assignment]
    assignmentsFindByCourseIdAndDateAssignedBetweenAndAssignmentType(courseId: ID!, startDate: String!, endDate: String!, assignmentType: String!): [Assignment]

    #StudentScore
    findByStudentId(studentId:ID!):[StudentScore]
    studentScoreFindByStudentIdAndCourseName(studentId:ID!, courseName:String!): [StudentScore]
    studentScoreFindByStudentIdAndCourseNameAndDateAssignedBetween(studentId:ID!, courseName:String!, startDate:String!, endDate:String!):[StudentScore]
    studentScoreFindByStudentIdAndMissing(studentId:ID!, limit:Int!):[StudentScore]
    studentScoreFindByStudentIdAndPercentageScoreLessThan(studentId:ID!, scoreThreshold:Float!):[StudentScore]
    studentScoreFindByCourseNameContainsAndDateAssignedBetween(courseName:String!, startDate:String!, endDate:String!):[StudentScore]
    studentScoreFindByCourseNameContainsAndDateAssignedBetweenAndPercentageScoreLessThan(courseName:String!, startDate:String!,endDate:String!,threshold:Float!):[StudentScore]
    studentScoreFindByCourseNameContainsAndDateAssignedBetweenAndMissingIsTrue(courseName:String!,startDate:String!,endDate:String!):[StudentScore]

    #CourseDTO
    summarizeStudentCourseGradeBetweenDates(studentId: Int!, courseName: String!, startDate: String!, endDate: String!):CourseSummary
    summarizeWholeClassCourseGradeBetweenDates(teacherLastName: String!, courseName: String!, startDate: String!, endDate: String!):CourseSummary
}